{"version":3,"sources":["components/Sidebar.js","components/RenderCV.js","components/AboutForm.js","components/ExperienceForm.js","components/EducationForm.js","components/FormButtons.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","props","RenderButton","isComplete","changeView","getHeaders","view","getPropLength","experience","education","ExperienceList","map","item","establishment","Number","id","EducationList","institution","className","onClick","RenderCV","user","about","fullName","profession","phone","email","Fragment","scope","rowSpan","from","to","position","responsibilities","qualification","subject","AboutForm","handleChange","bind","e","this","updateState","target","value","name","htmlFor","type","required","onChange","pattern","Component","ExperienceForm","split","viewType","viewNo","experienceNo","EducationForm","educationNo","FormButtons","nextFormButton","prevFormButton","addNewButton","deleteCurrentButton","toUpperCase","string","charAt","concat","slice","removeItem","preventDefault","lastExperienceIndex","containerJustify","Buttons","filter","button","length","justifyContent","style","Form","submitAndAdvance","addItem","nextView","nativeEvent","submitter","nextViewType","nextViewNo","obj","onSubmit","includes","App","readyToRender","getUserData","state","blankItem","toString","setState","prevState","newProp","forEach","Object","values","some","subValue","console","log","prop","Array","isArray","subProp","index","newState","stateProp","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cf0fb16.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Sidebar.css\";\n\nexport default function Sidebar(props) {\n  const { isComplete, changeView, getHeaders, view, getPropLength } = props;\n  const { experience, education } = getHeaders();\n  const ExperienceList = experience.map((item) => (\n    <li key={item.id}>\n      {item.establishment || `Experience ${Number(item.id) + 1}`}\n    </li>\n  ));\n  const EducationList = education.map((item) => (\n    <li key={item.id}>\n      {item.institution || `Education ${Number(item.id) + 1}`}\n    </li>\n  ));\n  let RenderButton;\n  if (!isComplete) {\n    RenderButton = (\n      <div className=\"cannotrender\">\n        <p>Please complete form</p>\n      </div>\n    );\n  } else {\n    if (view === \"render\") {\n      RenderButton = (\n        <div className=\"canrender\">\n          <button\n            onClick={() =>\n              changeView(`education_${getPropLength(\"education\") - 1}`)\n            }\n          >\n            Edit CV\n          </button>\n        </div>\n      );\n    } else {\n      RenderButton = (\n        <div className=\"canrender\">\n          <button onClick={() => changeView(\"render\")}>Render CV</button>\n        </div>\n      );\n    }\n  }\n  return (\n    <div className=\"sidebar\">\n      <ul className=\"formlist\">\n        <li>About Me</li>\n        <li>\n          Experience\n          <ul>{ExperienceList}</ul>\n        </li>\n        <li>\n          Education\n          <ul>{EducationList}</ul>\n        </li>\n      </ul>\n      {RenderButton}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../styles/RenderCV.css\";\n\nexport default function RenderCV(props) {\n  const { about, education, experience } = props.user;\n  return (\n    <div className=\"cv\">\n      <div className=\"cvheader\">\n        <h1 className=\"cvname\">{about.fullName}</h1>\n        <h2 className=\"cvprofession\">{about.profession}</h2>\n        <div className=\"cvcontact\">\n          <p className=\"cvphone\">☎: {about.phone}</p>\n          <p className=\"cvemail\">✉: {about.email}</p>\n        </div>\n      </div>\n      <table className=\"cvtable\">\n        <caption>Experience</caption>\n        <tbody>\n          {experience.map((item) => {\n            return (\n              <React.Fragment key={item.id}>\n                <tr>\n                  <th className=\"cvdates\" scope=\"row\" rowSpan=\"3\">\n                    {item.from} - {item.to}\n                  </th>\n                  <th className=\"cvestablishment\">{item.establishment}</th>\n                </tr>\n                <tr>\n                  <td className=\"cvposition\">{item.position}</td>\n                </tr>\n                <tr>\n                  <td className=\"cvresponsibilities\">\n                    {item.responsibilities}\n                  </td>\n                </tr>\n              </React.Fragment>\n            );\n          })}\n        </tbody>\n      </table>\n      <table className=\"cvtable\">\n        <caption>Education</caption>\n        <tbody>\n          {education.map((item) => {\n            return (\n              <React.Fragment key={item.id}>\n                <tr>\n                  <th className=\"cvdates\" scope=\"row\" rowSpan=\"2\">\n                    {item.from} - {item.to}\n                  </th>\n                  <th className=\"cvinstitution\">{item.institution}</th>\n                </tr>\n                <tr>\n                  <td>\n                    <span className=\"cvqualification\">\n                      {item.qualification}\n                    </span>{\" \"}\n                    - <span className=\"cvsubject\">{item.subject}</span>\n                  </td>\n                </tr>\n              </React.Fragment>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class AboutForm extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    const { updateState, view } = this.props;\n    updateState(e.target.value, view, e.target.name);\n  }\n  render() {\n    const { fullName, profession, email, phone } = this.props.user;\n    return (\n      <div className=\"inputFields\">\n        <h1>About Me</h1>\n        <label htmlFor=\"fullName\">Full Name:</label>\n        <input\n          type=\"text\"\n          name=\"fullName\"\n          id=\"fullName\"\n          value={fullName}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"profession\">Profession:</label>\n        <input\n          type=\"text\"\n          name=\"profession\"\n          id=\"profession\"\n          value={profession}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          value={email}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"phone\">Phone:</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          id=\"phone\"\n          value={phone}\n          required\n          pattern=\"[0-9 ()+]+\"\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class ExperienceForm extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    const { updateState, view } = this.props;\n    const [viewType, viewNo] = view.split(\"_\");\n    updateState(e.target.value, viewType, e.target.name, Number(viewNo));\n  }\n  render() {\n    const { establishment, position, responsibilities, from, to } =\n      this.props.experience;\n    const { view } = this.props;\n    const experienceNo = Number(view.split(\"_\")[1]);\n\n    return (\n      <div className=\"inputFields\">\n        <h1>{`Experience ${experienceNo + 1}`}</h1>\n        <label htmlFor=\"establishment\">Establishment:</label>\n        <input\n          type=\"text\"\n          name=\"establishment\"\n          id=\"establishment\"\n          value={establishment}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"position\">Position:</label>\n        <input\n          type=\"text\"\n          name=\"position\"\n          id=\"position\"\n          value={position}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"responsibilities\">Responsibilities:</label>\n        <input\n          type=\"textarea\"\n          name=\"responsibilities\"\n          id=\"responsibilities\"\n          value={responsibilities}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"from\">Start Date:</label>\n        <input\n          type=\"text\"\n          name=\"from\"\n          id=\"from\"\n          value={from}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"to\">End Date:</label>\n        <input\n          type=\"text\"\n          name=\"to\"\n          id=\"to\"\n          value={to}\n          required\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class EducationForm extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    const { updateState, view } = this.props;\n    const [viewType, viewNo] = view.split(\"_\");\n    updateState(e.target.value, viewType, e.target.name, Number(viewNo));\n  }\n  render() {\n    const { institution, subject, qualification, from, to } =\n      this.props.education;\n    const { view } = this.props;\n    const educationNo = Number(view.split(\"_\")[1]);\n\n    return (\n      <div className=\"inputFields\">\n        <h1>{`Education ${educationNo + 1}`}</h1>\n        <label htmlFor=\"institution\">Institution:</label>\n        <input\n          type=\"text\"\n          name=\"institution\"\n          id=\"institution\"\n          value={institution}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"subject\">Subject:</label>\n        <input\n          type=\"text\"\n          name=\"subject\"\n          id=\"subject\"\n          value={subject}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"position\">Qualification:</label>\n        <input\n          type=\"text\"\n          name=\"qualification\"\n          id=\"qualification\"\n          value={qualification}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"from\">Start Date:</label>\n        <input\n          type=\"text\"\n          name=\"from\"\n          id=\"from\"\n          value={from}\n          required\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"to\">End Date:</label>\n        <input\n          type=\"text\"\n          name=\"to\"\n          id=\"to\"\n          value={to}\n          required\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../styles/FormButtons.css\";\n\nexport default class FormButtons extends Component {\n  render() {\n    const toUpperCase = (string) =>\n      string.charAt(0).toUpperCase().concat(string.slice(1));\n    const { view, getPropLength, changeView, removeItem } = this.props;\n    let nextFormButton;\n    let prevFormButton;\n    let addNewButton;\n    let deleteCurrentButton;\n    if (view === \"about\") {\n      // About view\n      nextFormButton = (\n        <button key=\"next\" type=\"submit\" value=\"experience_0\">\n          Experience 1\n        </button>\n      );\n    } else {\n      // Education or experience\n\n      const [viewType, viewNo] = view.split(\"_\");\n\n      if (Number(viewNo) === getPropLength(viewType) - 1) {\n        // last of type\n\n        if (viewType === \"experience\") {\n          // experience advances to education\n          nextFormButton = (\n            <button key=\"next\" type=\"submit\" value=\"education_0\">\n              Education 1\n            </button>\n          );\n        }\n\n        // education does not advance\n\n        // can add new if last of type\n        addNewButton = (\n          <button\n            key=\"add\"\n            type=\"submit\"\n            value={`${viewType}_${Number(viewNo) + 1}`}\n          >\n            + {toUpperCase(viewType)}\n          </button>\n        );\n      } else {\n        // exists higher number of type\n        nextFormButton = (\n          <button\n            key=\"next\"\n            type=\"submit\"\n            value={`${viewType}_${Number(viewNo) + 1}`}\n          >{`${toUpperCase(viewType)} ${Number(viewNo) + 2}`}</button>\n        );\n      }\n\n      if (viewNo === \"0\") {\n        // first of type\n\n        if (viewType === \"experience\") {\n          // Experience 1\n          prevFormButton = (\n            <button\n              key=\"previous\"\n              className=\"backbutton\"\n              onClick={(e) => {\n                changeView(\"about\");\n                e.preventDefault();\n              }}\n            >\n              About Me\n            </button>\n          );\n        } else if (viewType === \"education\") {\n          // Education 1\n          const lastExperienceIndex = getPropLength(viewType) - 1;\n          prevFormButton = (\n            <button\n              key=\"previous\"\n              onClick={(e) => {\n                changeView(`experience_${lastExperienceIndex}`);\n                e.preventDefault();\n              }}\n            >{`Experience ${lastExperienceIndex + 1}`}</button>\n          );\n        }\n      } else {\n        // is experience/education 2 or more\n        deleteCurrentButton = (\n          <button\n            key=\"delete\"\n            onClick={(e) => {\n              removeItem(viewType, viewNo);\n              e.preventDefault();\n            }}\n          >{`Delete Current ${toUpperCase(viewType)}`}</button>\n        );\n        prevFormButton = (\n          <button\n            key=\"previous\"\n            className=\"backbutton\"\n            onClick={(e) => {\n              changeView(`${viewType}_${viewNo - 1}`);\n              e.preventDefault();\n            }}\n          >{`${toUpperCase(viewType)} ${viewNo}`}</button>\n        );\n      }\n    }\n\n    const Buttons = [\n      prevFormButton,\n      deleteCurrentButton,\n      addNewButton,\n      nextFormButton,\n    ].filter((button) => button);\n\n    let containerJustify;\n    switch (Buttons.length) {\n      case 1:\n        containerJustify = { justifyContent: \"flex-end\" };\n        break;\n      case 2:\n        containerJustify = { justifyContent: \"space-between\" };\n        break;\n      default:\n        containerJustify = { justifyContent: \"center\" };\n        break;\n    }\n    return (\n      <div className=\"buttonContainer\" style={containerJustify}>\n        {Buttons}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AboutForm from \"./AboutForm\";\nimport ExperienceForm from \"./ExperienceForm\";\nimport EducationForm from \"./EducationForm\";\nimport FormButtons from \"./FormButtons\";\nimport \"../styles/Form.css\";\n\nexport default class Form extends Component {\n  constructor() {\n    super();\n    this.submitAndAdvance = this.submitAndAdvance.bind(this);\n  }\n  submitAndAdvance(e) {\n    /*\n    Ideally, both advance view and add new only work IF form is filled out\n    Therefore, they only activate on form submit\n    Therefore, the buttons have to be listed as submit buttons\n    But as soon as I run the 'addItem' function, no user object is\n    passed to the ExperienceForm component...?\n    */\n    e.preventDefault();\n\n    const { changeView, getPropLength, addItem } = this.props;\n    const nextView = e.nativeEvent.submitter.value;\n    const [nextViewType, nextViewNo] = nextView.split(\"_\");\n\n    if (getPropLength(nextViewType) === Number(nextViewNo)) {\n      // doesn't exist yet\n      addItem(nextViewType);\n    } else {\n      // exists\n      changeView(nextView);\n    }\n  }\n  render() {\n    const { view, obj, updateState, changeView, getPropLength, removeItem } =\n      this.props;\n    if (view === \"about\") {\n      return (\n        <form onSubmit={this.submitAndAdvance}>\n          <AboutForm user={obj} updateState={updateState} view={view} />\n          <FormButtons\n            view={view}\n            getPropLength={getPropLength}\n            changeView={changeView}\n            removeItem={removeItem}\n          />\n        </form>\n      );\n    } else if (view.includes(\"experience\")) {\n      return (\n        <form onSubmit={this.submitAndAdvance}>\n          <ExperienceForm\n            experience={obj}\n            updateState={updateState}\n            view={view}\n          />\n          <FormButtons\n            view={view}\n            getPropLength={getPropLength}\n            changeView={changeView}\n            removeItem={removeItem}\n          />\n        </form>\n      );\n    } else if (view.includes(\"education\")) {\n      return (\n        <form onSubmit={this.submitAndAdvance}>\n          <EducationForm\n            education={obj}\n            updateState={updateState}\n            view={view}\n          />\n          <FormButtons\n            view={view}\n            getPropLength={getPropLength}\n            changeView={changeView}\n            removeItem={removeItem}\n          />\n        </form>\n      );\n    }\n  }\n}\n","import \"./styles/App.css\";\nimport React, { Component } from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport RenderCV from \"./components/RenderCV\";\nimport Form from \"./components/Form\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.readyToRender = this.readyToRender.bind(this);\n    this.updateState = this.updateState.bind(this);\n    this.changeView = this.changeView.bind(this);\n    this.getPropLength = this.getPropLength.bind(this);\n    this.getHeaders = this.getHeaders.bind(this);\n    this.getUserData = this.getUserData.bind(this);\n    this.state = {\n      about: {\n        fullName: \"\",\n        profession: \"\",\n        email: \"\",\n        phone: \"\",\n      },\n      education: [\n        {\n          institution: \"\",\n          subject: \"\",\n          qualification: \"\",\n          from: \"\",\n          to: \"\",\n          id: \"0\",\n        },\n      ],\n      experience: [\n        {\n          establishment: \"\",\n          position: \"\",\n          responsibilities: \"\",\n          from: \"\",\n          to: \"\",\n          id: \"0\",\n        },\n      ],\n      view: \"about\",\n      isComplete: false,\n    };\n  }\n  addItem(type) {\n    const blankItem =\n      type === \"education\"\n        ? {\n            institution: \"\",\n            subject: \"\",\n            qualification: \"\",\n            from: \"\",\n            to: \"\",\n            id: this.state.education.length.toString(),\n          }\n        : {\n            establishment: \"\",\n            position: \"\",\n            responsibilities: \"\",\n            from: \"\",\n            to: \"\",\n            id: this.state.experience.length.toString(),\n          };\n    this.setState(\n      (prevState) => ({\n        [type]: [...prevState[type], blankItem],\n        view: `${type}_${prevState[type].length}`,\n      }),\n      () => {\n        this.readyToRender();\n      }\n    );\n  }\n  removeItem(type, id) {\n    this.setState(\n      (prevState) => {\n        const newProp = prevState[type].filter((item) => item.id !== id);\n        newProp.forEach(\n          (item) =>\n            (item.id = item.id > id ? Number(item.id - 1).toString() : item.id)\n        );\n        return { [type]: newProp, view: `${type}_${id - 1}` };\n      },\n      () => {\n        this.readyToRender();\n      }\n    );\n  }\n  readyToRender() {\n    const aboutValues = Object.values(this.state.about);\n    if (aboutValues.some((subValue) => !subValue)) {\n      // empty about subvalue\n      this.state.isComplete &&\n        this.setState({ isComplete: false }, () => console.log(this.state));\n      return;\n    }\n    for (const prop of Object.values(this.state)) {\n      if (!Array.isArray(prop)) {\n        // is not 'education' or 'experience' (array properties)\n        continue;\n      }\n      // 'education' or 'experience'\n      if (\n        prop.some((item) => {\n          if (Object.values(item).some((subValue) => !subValue)) {\n            // empty array item subvalue\n            return true;\n          }\n          return false;\n        })\n      ) {\n        // array item with empty value\n        this.state.isComplete &&\n          this.setState({ isComplete: false }, () => console.log(this.state));\n        return;\n      }\n    }\n    // all fields are filled\n    !this.state.isComplete &&\n      this.setState({ isComplete: true }, () => console.log(this.state));\n  }\n  updateState(value, prop, subProp, index = null) {\n    const newState = { ...this.state };\n    if (index === null) {\n      newState[prop][subProp] = value;\n    } else {\n      newState[prop][index][subProp] = value;\n    }\n    this.setState(newState, () => {\n      this.readyToRender();\n    });\n  }\n  changeView(view) {\n    this.setState({ view });\n  }\n  getPropLength(prop) {\n    return this.state[prop].length;\n  }\n  getHeaders() {\n    return {\n      experience: this.state.experience.map((item) => ({\n        establishment: item.establishment,\n        id: item.id,\n      })),\n      education: this.state.education.map((item) => ({\n        institution: item.institution,\n        id: item.id,\n      })),\n    };\n  }\n  getUserData() {\n    return {\n      about: this.state.about,\n      experience: this.state.experience,\n      education: this.state.education,\n    };\n  }\n  render() {\n    const { view } = this.state;\n    let stateProp;\n    if (view === \"about\") {\n      stateProp = this.state.about;\n    } else if (view !== \"render\") {\n      // CHECK ABOVE!!\n      const [viewType, viewNo] = view.split(\"_\");\n      stateProp = this.state[viewType].find((item) => item.id === viewNo);\n    }\n    return (\n      <div className=\"App\">\n        <Sidebar\n          isComplete={this.state.isComplete}\n          getHeaders={this.getHeaders}\n          changeView={this.changeView}\n          view={view}\n          getPropLength={this.getPropLength}\n        />\n        <main>\n          {view === \"render\" ? (\n            <RenderCV user={this.getUserData()} />\n          ) : (\n            <Form\n              obj={stateProp}\n              view={view}\n              updateState={this.updateState}\n              changeView={this.changeView}\n              addItem={this.addItem}\n              removeItem={this.removeItem}\n              getPropLength={this.getPropLength}\n            />\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}